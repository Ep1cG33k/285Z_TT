16
{"last_modification_time":1572054655,"language":1,"import_file":"c:/users/hughj/documents/github/285z_tt/src/285z-main/autonomous.cpp","args_hash":11841056572507675250,"includes":[],"dependencies":[],"skipped_by_preprocessor":[],"types":[{"id":0,"usr":3,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[0,1],"uses":[]}],"funcs":[{"id":0,"usr":7188146309871728264,"detailed_name":"void testAut()","short_name_offset":5,"short_name_size":7,"kind":12,"storage":1,"hover":"","comments":"\r\nRuns the user autonomous code. This function will be started in its own task\r\nwith the default priority and stack size whenever the robot is enabled via\r\nthe Field Management System or the VEX Competition Switch in the autonomous\r\nmode. Alternatively, this function may be called in initialize or opcontrol\r\nfor non-competition testing purposes.\r\n\r\nIf the robot is disabled or communications is lost, the autonomous task\r\nwill be stopped. Re-enabling the robot will restart the task, not re-start it\r\nfrom where it left off.","declarations":[],"spell":"20:6-20:13|-1|1|2","extent":"20:1-30:2|-1|1|0","bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":1,"usr":16249063379999417334,"detailed_name":"void redAut()","short_name_offset":5,"short_name_size":6,"kind":12,"storage":1,"hover":"","comments":"","declarations":[],"spell":"32:6-32:12|-1|1|2","extent":"32:1-64:2|-1|1|0","bases":[],"derived":[],"vars":[],"uses":["145:3-145:9|5|3|32"],"callees":[]},{"id":2,"usr":17540125346039891533,"detailed_name":"void blueAut()","short_name_offset":5,"short_name_size":7,"kind":12,"storage":1,"hover":"","comments":"","declarations":[],"spell":"66:6-66:13|-1|1|2","extent":"66:1-97:2|-1|1|0","bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":3,"usr":3948973514534557476,"detailed_name":"void turnTest()","short_name_offset":5,"short_name_size":8,"kind":12,"storage":1,"hover":"","comments":"","declarations":[],"spell":"99:6-99:14|-1|1|2","extent":"99:1-103:2|-1|1|0","bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":4,"usr":7697274934146132647,"detailed_name":"void liftTest()","short_name_offset":5,"short_name_size":8,"kind":12,"storage":1,"hover":"","comments":"","declarations":[],"spell":"105:6-105:14|-1|1|2","extent":"105:1-109:2|-1|1|0","bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":5,"usr":4746349674543882792,"detailed_name":"void autonomous()","short_name_offset":5,"short_name_size":10,"kind":12,"storage":1,"hover":"","comments":"^ included\r\n/*\r\nprofile.generatePath({Point{1_ft, 7_ft, 45_deg}, Point{2.5_ft, 8.5_ft, 45_deg}}, \"Cap Scrape\"); //goes forward to cap to scrape\r\nprofile.setTarget(\"Cap Scrape\");\r\npros::Task::delay(750);\r\nprofile.waitUntilSettled();\r\nprofile.removePath(\"Cap Scrape\");\r\n\r\n// aut.setMaxVelocity(100);\r\nprofile.generatePath({Point{1_ft, 7_ft, 45_deg}, Point{2.8_ft, 8.8_ft, 45_deg}}, \"Left Column\");\r\nprofile.setTarget(\"Left Column\", bwd);\r\npros::Task::delay(100);\r\nprofile.waitUntilSettled();\r\n  l.moveAbsolute(0,50); //resets scraper\r\nprofile.removePath(\"Left Column\");\r\naut.setMaxVelocity(200);\r\n\r\nturn(-43_deg, 50); //turns to face left column\r\nturn(-2_deg, 50); //readjusts to go straight\r\nprofile.generatePath({hpRed, Point{1_ft, 10_ft, 0_deg}}, \"Left Low Flag\");\r\nprofile.setTarget(\"Left Low Flag\");\r\nprofile.waitUntilSettled();\r\n\r\nprofile.generatePath({Point{1_ft, 9_ft, 90_deg}, lRed}, \"Middle Low Flag P1\");\r\nprofile.setTarget(\"Middle Low Flag P1\", bwd);\r\nprofile.waitUntilSettled();\r\nprofile.removePath(\"Middle Low Flag P1\");\r\nturn(90_deg, 100);\r\n\r\nprofile.generatePath({Point{1_ft, 9_ft, 0_deg}, Point{5.2_ft, 11_ft, 90_deg}}, \"Middle Low Flag P2\");\r\nprofile.setTarget(\"Middle Low Flag P2\");\r\nprofile.waitUntilSettled();","declarations":[],"spell":"144:6-144:16|-1|1|2","extent":"144:1-146:2|-1|1|0","bases":[],"derived":[],"vars":[],"uses":[],"callees":["145:3-145:9|1|3|32"]}],"vars":[{"id":0,"usr":15681097345617818540,"detailed_name":"const bool fwd","short_name_offset":11,"short_name_size":3,"hover":"const bool fwd {false}","comments":"","declarations":[],"spell":"4:12-4:15|-1|1|2","extent":"4:1-4:23|-1|1|0","type":0,"uses":[],"kind":13,"storage":1},{"id":1,"usr":9944660586025982392,"detailed_name":"const bool bwd","short_name_offset":11,"short_name_size":3,"hover":"const bool bwd {true}","comments":"","declarations":[],"spell":"5:12-5:15|-1|1|2","extent":"5:1-5:22|-1|1|0","type":0,"uses":[],"kind":13,"storage":1}]}